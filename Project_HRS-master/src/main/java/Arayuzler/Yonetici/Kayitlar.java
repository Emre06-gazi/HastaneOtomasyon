package Arayuzler.Yonetici;

import DB.*;
import java.sql.*;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;

public class Kayitlar extends javax.swing.JPanel {
    
    private ArrayList<String> columnNames;
    private ArrayList<String> columnTypes;
    private ArrayList<String> values;
    private String newValue;
    private int reset = 0;
    
    public Kayitlar() {
        initComponents();
    }
    
    public void baslat(){
        tables();
        jTable1.getTableHeader().setResizingAllowed(false);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {},
            new String [] {}
        ));
        jTable1.setRowHeight(23);
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>());

        jLabel1.setText("Tablo:");

        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(255, 0, 0));
        jButton1.setText("Kayýt Sil");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Arama");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(75, 75, 75)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jTextField1))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 904, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(425, 425, 425)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(41, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        reset = 1;
        delRows();
        reset = 0;
        columnNames = new ArrayList<>();
        Query db = new Query();
        Connection con = db.getCon();
        try {
            PreparedStatement stmt = con.prepareStatement("SELECT column_name,data_type FROM DBA_TAB_COLUMNS WHERE table_name=?");
            stmt.setString(1, (String) jComboBox1.getSelectedItem());
            ResultSet result = stmt.executeQuery();
            columnTypes = new ArrayList<>();
            while(result.next()){
                columnNames.add(result.getString("column_name"));
                columnTypes.add(result.getString("data_type"));
            }
            String kelime = deleteSpaces(jTextField1.getText());
            String sorgu = "SELECT * FROM " + (String) jComboBox1.getSelectedItem();
            if(kelime.length() != 0){
                sorgu = (setLike(columnNames, sorgu, kelime));
                System.out.println(sorgu);
            }
            PreparedStatement stmt2 = con.prepareStatement(sorgu);
            result = stmt2.executeQuery();
            DefaultTableModel newModel = new DefaultTableModel(columnNames.toArray(new String[columnNames.size()]), 0);
            while(result.next()) {
                String[] temp = new String[columnNames.size()];
                for( int i = 0; i < columnNames.size(); i++){
                    temp[i] = result.getString(i+1);
                }
                newModel.addRow(temp);
            }
            newModel.addTableModelListener(new TableModelListener() {
                @Override
                public void tableChanged(TableModelEvent e) {
                    int row = jTable1.getSelectedRow();
                    if (row > 0 && reset == 0) {
                        int col = jTable1.getSelectedColumn();
                        newValue = (String) jTable1.getValueAt(row, col);
                        try {
                            PreparedStatement stmt = con.prepareStatement(setQuery(values, col, 0));
                            stmt.executeUpdate();
                        } catch (SQLException ex) {
                            JOptionPane.showMessageDialog(jLabel1, ex);
                        }
                        JOptionPane.showMessageDialog(jTable1, "Güncelleme baþarýlý!");
                        jButton2MouseClicked(null);
                    }
                }
            });
            jTable1.setModel(newModel);
        } catch (SQLException ex) {
            System.out.println(ex);
        }
    }//GEN-LAST:event_jButton2MouseClicked

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        if (jTable1.getSelectedRow() > 0) {
            values = new ArrayList();
            for (int i = 0; i < columnTypes.size() ; i++){
                values.add((String) jTable1.getValueAt(jTable1.getSelectedRow(), i));
            }
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
        jButton2MouseClicked(null);
    }//GEN-LAST:event_jTextField1KeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Query db = new Query();
        Connection con = db.getCon();
        try {
            PreparedStatement stmt = con.prepareStatement(setQuery(values, 1, 1));
            stmt.execute();
            JOptionPane.showMessageDialog(this, "Kayýt silindi!");
            jButton2MouseClicked(null);
        } catch (SQLException ex) {
            System.out.println(ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void tables(){
        Query db = new Query();
        Connection con = db.getCon();
        try {
            PreparedStatement stmt = con.prepareStatement("SELECT table_name FROM DBA_TABLES WHERE owner='SYSTEM' ORDER BY table_name");
            ResultSet result = stmt.executeQuery();
            while(result.next()) {
                jComboBox1.addItem(result.getString("table_name"));
            }
        } catch (SQLException ex) {
            System.out.println(ex);
        }
    }
    private String deleteSpaces(String kelime){
        String temp = kelime;
        if(temp.length() != 0){
            int i = 0;
            while(temp.substring(i, i+1).equals(" ")){
                temp = temp.substring(1);
            }
            int t = temp.length();
            while(temp.substring(t-i-1, t-i).equals(" ")){
            i = i+1;
            }
            return temp.substring(0, t);
        }
        else{
            return temp;
        }
    }
    
    private void delRows(){
        DefaultTableModel table = (DefaultTableModel) jTable1.getModel();
        int rowCount = table.getRowCount();
        for(int i = 0; i < rowCount; i++){
            table.removeRow(0);
        }
    }
    
    private String setLike(ArrayList<String> columns, String sorgu, String kelime){
        String temp = sorgu + " WHERE ";
        for (int i = 0; i < columns.size(); i++){
            if(columnTypes.get(i).contains("VARCHAR")){
                temp = temp + columns.get(i) + " LIKE '%" + kelime + "%' OR ";
            }
            else if(columnTypes.get(i).contains("NUMBER")) {
                temp = temp + "CONCAT("+ columns.get(i)+ ",'') LIKE '%" + kelime + "%' OR ";
            }
            else if(columnTypes.get(i).contains("DATE")) {
                temp = temp + "TO_DATE(" + columns.get(i) + ", 'YYYY-MM-DD HH24:MI') LIKE '%" + kelime + "%' OR ";
            }
        }
        return temp.substring(0,temp.length()-4) + " ORDER BY " + columns.get(0);
    }
    
    private String setQuery(ArrayList<String> values, int changedCol, int code){
        String query = "";
        if(code == 0) {
            query = "UPDATE " + ((String) jComboBox1.getSelectedItem()) + " SET " + columnNames.get(changedCol);
            if(columnTypes.get(changedCol).contains("VARCHAR")) {
                query = query + "='" + newValue + "' WHERE";
            }
            else if(columnTypes.get(changedCol).contains("NUMBER")) {
                query = query + "=" + newValue + " WHERE";
            }
            else if(columnTypes.get(changedCol).contains("DATE")) {
                query = query + "=TO_DATE('" + newValue.substring(0, 16) + "', 'YYYY-MM-DD HH24:MI') WHERE";
            }
        }
        else if(code == 1) {
            query = "DELETE FROM " + ((String) jComboBox1.getSelectedItem()) + " WHERE";
        }
        for (int i = 0 ; i < values.size(); i++) {
            if(columnTypes.get(i).contains("VARCHAR") && values.get(i) != null) {
                query = query + " " +columnNames.get(i) + " ='" + values.get(i) + "' AND";
            }
            else if(columnTypes.get(i).contains("NUMBER") && values.get(i) != null) {
                query =  query + " " +columnNames.get(i) + " =" + values.get(i) + " AND";
            }
            else if(columnTypes.get(i).contains("DATE") && values.get(i) != null) {
                query = query + " " + columnNames.get(i) + "=TO_DATE('" + values.get(i).substring(0, 16) + "', 'YYYY-MM-DD HH24:MI') AND";
            }
        }
        return query.substring(0, query.length()-4);
    }
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
