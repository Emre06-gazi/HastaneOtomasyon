package Arayuzler.Hasta;

import DB.*;
import java.sql.*;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class RandevuAl extends javax.swing.JPanel {

    private final static String[] iller = {"ÝSTANBUL", "ANKARA", "ÝZMÝR", "ADANA", "ADIYAMAN", "AFYON", "AÐRI", "AKSARAY", "AMASYA", "ANTALYA", "ARDAHAN", "ARTVÝN", "AYDIN", "BALIKESÝR", "BARTIN", "BATMAN", "BAYBURT", "BÝLECÝK", "BÝNGÖL", "BÝTLÝS", "BOLU", "BURDUR", "BURSA", "ÇANAKKALE", "ÇANKIRI", "ÇORUM", "DENÝZLÝ", "DÝYARBAKIR", "DÜZCE", "EDÝRNE", "ELAZIÐ", "ERZÝNCAN", "ERZURUM", "ESKÝÞEHÝR", "GAZÝANTEP", "GÝRESUN", "GÜMÜÞHANE", "HAKKARÝ", "HATAY", "IÐDIR", "ISPARTA", "KARABÜK", "KARAMAN", "KARS", "KASTAMONU", "KAYSERÝ", "KIRIKKALE", "KIRKLARELÝ", "KIRÞEHÝR", "KÝLÝS", "KOCAELÝ", "KONYA", "KÜTAHYA", "MALATYA", "MANÝSA", "KAHRAMANMARAÞ", "MARDÝN", "MERSÝN", "MUÐLA", "MUÞ", "NEVÞEHÝR", "NÝÐDE", "ORDU", "OSMANÝYE", "RÝZE", "SAKARYA", "SAMSUN", "SÝÝRT", "SÝNOP", "SÝVAS", "TEKÝRDAÐ", "TOKAT", "TRABZON", "TUNCELÝ", "ÞANLIURFA", "ÞIRNAK", "UÞAK", "VAN", "YALOVA", "YOZGAT", "ZONGULDAK"};
    private int temp = 0;
    private int ilkKezSec = 0;
    private Long kullanici;
    private String selectedHastane = "";
    private String selectedKlinik = "";
    private String selectedSaat = "";
    private String[] selectedTarih = null;
    private ArrayList<java.util.Date> doluSaatler = new ArrayList<java.util.Date>();
    private final String[][] randevuSaatleri = new String [][]{{"09:00", "10:00", "11:00", "12:00", "     ", "14:00", "15:00"},
                                                               {"09:10", "10:10", "11:10", "12:10", "     ", "14:10", "15:10"},
                                                               {"09:20", "10:20", "11:20", "12:20", "     ", "14:20", "15:20"},
                                                               {"09:30", "10:30", "11:30", "     ", "13:30", "14:30", "15:30"},
                                                               {"09:40", "10:40", "11:40", "     ", "13:40", "14:40", "15:40"},
                                                               {"09:50", "10:50", "11:50", "     ", "13:50", "14:50", "15:50"}};
    
    public RandevuAl() {
        initComponents();
    }
    
    public void baslat(){
        jComboBox1ItemStateChanged(null);
        tarihComboBoxDoldur();
        jTable2.setCellSelectionEnabled(true);
        jTable1.getTableHeader().setResizingAllowed(false);
        jTable2.getTableHeader().setResizingAllowed(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        jComboBox3 = new javax.swing.JComboBox<>();
        jComboBox4 = new javax.swing.JComboBox<>();
        jComboBox5 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 204, 204));

        jLabel1.setText("Ýl:");

        jLabel2.setText("Ýlçe:");

        jLabel3.setText("Hastane:");

        jLabel4.setText("Klinik:");

        jLabel5.setText("Tarih:");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(iller));
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>());
        jComboBox2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox2ItemStateChanged(evt);
            }
        });

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>());
        jComboBox3.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox3ItemStateChanged(evt);
            }
        });

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>());

        jComboBox5.setModel(new javax.swing.DefaultComboBoxModel<>());

        jButton1.setText("Arama");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Kayýt");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {},
            new String [] {
                "Ad", "Soyad", "Muayene Yeri"
            }
        ){
            public boolean isCellEditable(int row, int column){
                return false;
            }
        }
    );
    jTable1.setRowHeight(23);
    jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
    jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jTable1MouseClicked(evt);
        }
    });
    jScrollPane1.setViewportView(jTable1);

    jTable2.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {"09:00", "10:00", "11:00", "12:00", "", "14:00", "15:00"},
            {"09:10", "10:10", "11:10", "12:10", "", "14:10", "15:10"},
            {"09:20", "10:20", "11:20", "12:20", "", "14:20", "15:20"},
            {"09:30", "10:30", "11:30", "", "13:30", "14:30", "15:30"},
            {"09:40", "10:40", "11:40", "", "13:40", "14:40", "15:40"},
            {"09:50", "10:50", "11:50", "", "13:50", "14:50", "15:50"},
        },
        new String [] {
            "", "", "", "", "", "", ""
        }
    ){
        public boolean isCellEditable(int row, int column){
            return false;
        }
    }
    );
    jTable2.setCellSelectionEnabled(true);
    jTable2.setRowHeight(30);
    jTable2.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
    jTable2.setShowGrid(true);
    jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jTable2MouseClicked(evt);
        }
    });
    jScrollPane2.setViewportView(jTable2);

    jLabel6.setText("Saat");

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(53, 53, 53)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5)
                        .addComponent(jLabel4)
                        .addComponent(jLabel3)
                        .addComponent(jLabel2))
                    .addGap(4, 4, 4)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jComboBox4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jComboBox3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createSequentialGroup()
                    .addGap(114, 114, 114)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(36, 36, 36)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(83, 83, 83)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createSequentialGroup()
                    .addGap(292, 292, 292)
                    .addComponent(jLabel6)))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addGap(37, 37, 37)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(40, 40, 40)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(40, 40, 40)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(40, 40, 40)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(40, 40, 40)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(46, 46, 46)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(27, 27, 27)
                    .addComponent(jLabel6)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        if(temp == 1){
            jComboBox2.removeAllItems();
            Query db = new Query();
            Connection con = db.getCon();
            try {
                PreparedStatement stmt = con.prepareStatement("SELECT ilce FROM ilce WHERE il = ? ORDER BY ilce");
                stmt.setString(1,(String) jComboBox1.getSelectedItem());
                ResultSet result = stmt.executeQuery();
                while(result.next()){
                    jComboBox2.addItem(result.getString("ilce"));
                }
                db.close();
                jComboBox2ItemStateChanged(null);
            } catch (SQLException ex) {
                System.out.println(ex);
            }
        }
        else{
            if(jComboBox1.getSelectedIndex() == 0 && ilkKezSec==0){
                temp = 1;
                jComboBox1ItemStateChanged(null);
                temp = 1;
                ilkKezSec=1;
            }
        }
        temp=Math.abs(temp-1);
    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void jComboBox2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox2ItemStateChanged
        if(temp == 1){
            temp = 0;
            jComboBox3.removeAllItems();
            temp = 1;
            Query db = new Query();
            Connection con = db.getCon();
            try {
                PreparedStatement stmt = con.prepareStatement("SELECT ad FROM hastane WHERE ilceno IN (SELECT ilceno FROM ilce WHERE il= ? AND ilce = ?) ORDER BY ad");
                stmt.setString(1,(String) jComboBox1.getSelectedItem());
                stmt.setString(2,(String) jComboBox2.getSelectedItem());
                ResultSet result = stmt.executeQuery();
                while(result.next()){
                    jComboBox3.addItem(result.getString("ad"));
                }
                db.close();
                jComboBox3ItemStateChanged(null);
            } catch (SQLException ex) {
                System.out.println(ex);
            }
        }
        temp=Math.abs(temp-1);
    }//GEN-LAST:event_jComboBox2ItemStateChanged

    private void jComboBox3ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox3ItemStateChanged
        if(temp == 1){
            jComboBox4.removeAllItems();
            Query db = new Query();
            Connection con = db.getCon();
            try {
                PreparedStatement stmt = con.prepareStatement("SELECT birimadi FROM birim WHERE belirtec='hasta' AND hastaneno IN (SELECT hastaneno FROM hastane WHERE ad = ?) GROUP BY birimadi ORDER BY birimadi");
                stmt.setString(1,(String) jComboBox3.getSelectedItem());
                ResultSet result = stmt.executeQuery();
                while(result.next()){
                    jComboBox4.addItem(result.getString("birimadi"));
                }
                db.close();
            } catch (SQLException ex) {
                System.out.println(ex);
            }
        }
        temp=Math.abs(temp-1);
    }//GEN-LAST:event_jComboBox3ItemStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        setSelected();
        Query db = new Query();
        Connection con = db.getCon();
        try {
            PreparedStatement stmt = con.prepareStatement("SELECT doktorad, doktorsoyad, doktorbirim, doktoroda FROM uygundoktorpipeline(?,?,?) ORDER BY doktorad");
            stmt.setString(1, selectedHastane);
            stmt.setString(2, selectedKlinik);
            stmt.setString(3, selectedTarih[0] + "-" + selectedTarih[1] + "-" + selectedTarih[2]);
            ResultSet result2 = stmt.executeQuery();
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            setDoktor();
            while(result2.next()){
                model.addRow(new Object[] {result2.getString("doktorad"), result2.getString("doktorsoyad"), result2.getString("doktorbirim") + " - " + result2.getString("doktoroda")});
            }
        } catch (SQLException ex) {
            System.out.println(ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if(!selectedHastane.equals("") && !selectedKlinik.equals("") && !selectedSaat.equals("") && selectedTarih != null){
            Query db = new Query();
            Connection con = db.getCon();
            try {
                PreparedStatement stmt = con.prepareStatement("SELECT personelno FROM personel WHERE ad = ? AND soyad = ? AND birimno IN (SELECT b.birimno FROM birim b JOIN (SELECT * FROM hastane WHERE ad = ?) h ON b.hastaneno=h.hastaneno AND b.birimadi = ?)");
                String[] doktor = getSelectedDoktor();
                stmt.setString(1, doktor[0]);
                stmt.setString(2, doktor[1]);
                stmt.setString(3, selectedHastane);
                stmt.setString(4, selectedKlinik);
                ResultSet result = stmt.executeQuery();
                Long personelNo = 999999L;
                while(result.next()){
                    personelNo = result.getLong("personelno");
                }
                stmt.close();
                CallableStatement stmt2 = con.prepareCall("BEGIN\ninsertToRandevu(?,?,TO_DATE(?, 'DD-MM-YYYY HH24:MI'),?);\nEND;");
                stmt2.setLong(1, kullanici);
                stmt2.setLong(2, personelNo);
                stmt2.setString(3, selectedTarih[0]+"-"+selectedTarih[1]+"-"+selectedTarih[2]+" "+selectedSaat);
                stmt2.registerOutParameter(4, java.sql.Types.INTEGER);
                stmt2.execute();
            
                int basarili = stmt2.getInt(4);
                if(basarili == 0){
                    JOptionPane.showMessageDialog(this, "Randevunuz baþarýyla eklenmiþtir!");
                    setZero();
                }
                else if(basarili == 1){
                    JOptionPane.showMessageDialog(this, "Bu saate baþka bir randevunuz vardýr!");
                }
                else if(basarili == 2){
                    JOptionPane.showMessageDialog(this, "Randevu baþkasý tarafýndan alýnmýþtýr!");
                }
            } catch (SQLException ex) {
                System.out.println(ex);
            }
        }
        else {
            JOptionPane.showMessageDialog(this, "Lütfen geçerli bir randevu seçiniz!");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        String[] doktor = getSelectedDoktor();
        if(selectedHastane.length() != 0 && selectedKlinik.length() != 0 && selectedTarih != null && !"".equals(doktor[0]) && !"".equals(doktor[1])){
            setRandevuSaatleri();
            Query db = new Query();
            Connection con = db.getCon();
            try {
                PreparedStatement stmt = con.prepareStatement("SELECT personelno FROM personel WHERE ad = ? AND soyad = ? AND birimno IN (SELECT b.birimno FROM birim b JOIN (SELECT * FROM hastane WHERE ad = ?) h ON b.hastaneno=h.hastaneno AND b.birimadi = ?)");
                stmt.setString(1, doktor[0]);
                stmt.setString(2, doktor[1]);
                stmt.setString(3, selectedHastane);
                stmt.setString(4, selectedKlinik);
                ResultSet result = stmt.executeQuery();
                Long personelNo = 999999L;
                while(result.next()){
                    personelNo = result.getLong("personelno");
                }
                stmt.close();
                stmt = con.prepareStatement("SELECT tarih FROM randevu WHERE doktorid = ? AND tarih BETWEEN TO_DATE(?, 'DD-MM-YYYY HH24:MI') AND TO_DATE(?, 'DD-MM-YYYY HH24:MI')");
                stmt.setLong(1, personelNo);
                stmt.setString(2, selectedTarih[0]+"-"+selectedTarih[1]+"-"+selectedTarih[2]+" 05:00");
                stmt.setString(3, selectedTarih[0]+"-"+selectedTarih[1]+"-"+selectedTarih[2]+" 20:00");
                result = stmt.executeQuery();
                while(result.next()){
                    doluSaatler.add(result.getTimestamp("tarih"));
                }
                while(!doluSaatler.isEmpty()){
                    String [] saat = doluSaatler.remove(0).toString().split(" ")[1].split(":");
                    int row = Integer.parseInt(saat[1].substring(0,1));
                    int col = Integer.parseInt(saat[0])-9;
                    jTable2.setValueAt("DOLU", row, col);
                }
            } catch (SQLException ex) {
                System.out.println(ex);
            }
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        int row = jTable2.getSelectedRow();
        int col = jTable2.getSelectedColumn();
        selectedSaat = (String) jTable2.getValueAt(row, col);
        if(selectedSaat.equals("DOLU")){
            selectedSaat = "";
        }
    }//GEN-LAST:event_jTable2MouseClicked

    private void tarihComboBoxDoldur(){
        Tarih tarih = new Tarih();
        ArrayList<String[]> gunler = tarih.haftaIci(tarih.bugunkiTarihFromDate().split("-"));
        String[] tutucu;
        while(!gunler.isEmpty()){
            tutucu = gunler.remove(0);
            jComboBox5.addItem(tutucu[0] + " " + tutucu[1] + " " + tutucu[2] + " " + tutucu[3]);
        }
    }
    
    
    private String[] getSelectedDoktor(){
        int row = jTable1.getSelectedRow();
        return new String[] {(String) jTable1.getValueAt(row, 0),(String) jTable1.getValueAt(row, 1)};
    }
    
    private void setSelected(){
        selectedHastane = (String) jComboBox3.getSelectedItem();
        selectedKlinik = (String) jComboBox4.getSelectedItem();
        String[] tutucuTarih = ((String) jComboBox5.getSelectedItem()).split(" ");
        Tarih trh = new Tarih();
        selectedTarih = trh.stringToStandartDate(tutucuTarih);
    }
    
    private void setRandevuSaatleri(){
        for(int i = 0; i < 6; i++){
            for(int j = 0; j < 7; j++){
                jTable2.setValueAt((String) randevuSaatleri[i][j], i, j);
            }
        }
    }
    
    private void setDoktor(){
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        int i = model.getRowCount();
        for(int j = 0; j < i; j++){
            model.removeRow(0);
        }
    }
    
    protected void setZero(){
        jComboBox1.setSelectedIndex(0);
        jComboBox2.removeAllItems();
        jComboBox3.removeAllItems();
        jComboBox4.removeAllItems();
        jComboBox5.setSelectedIndex(0);
        setRandevuSaatleri();
        setDoktor();
    }
    
    public void setKullanici(Long kullanici){
        this.kullanici = kullanici;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JComboBox<String> jComboBox5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}
